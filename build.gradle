plugins {
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'org.springframework.boot' version '2.2.5.RELEASE'
}

group = 'com.elyxor'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	jcenter()
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.postgresql:postgresql'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'


}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springBootAdminVersion', "2.2.1")
}

test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}